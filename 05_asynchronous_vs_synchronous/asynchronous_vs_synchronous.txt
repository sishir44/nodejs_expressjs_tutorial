SYNCHRONOUS:
* Synchronous execution usually uses to code executing in sequence and the program is executed
  line by line, one line at a time. 
* When a function is called, the program execution waits until that function returns before 
  continuing to the next line of code.
* Synchronous code is also called “blocking” as it halts the program until all the resources are available.
* Synchronous code wastes around 90% of CPU cycles waiting for the network or disk to get the data, 
  but the Asynchronous code is much more performing.
* Sync = Synchronous = Blocking I/O model


ASYNCHRONOUS:
* Asynchronous execution applies to execution that doesn’t run in the sequence it appears in the code. 
* The program doesn’t wait for the task to complete and can move on to the next task.
* Asynchronous code is also known as “non-blocking”. The program continues executing and 
  doesn’t wait for external resources (I/O) to be available.
* Using Asynchronous code is a more efficient to have concurrency without dealing with multiple 
  execution threads.
* Async = Asynchronous = Non-blocking I/O model